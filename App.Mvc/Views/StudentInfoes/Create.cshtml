@model App.Mvc.ViewModels.StudentInfoVm

@{
    ViewBag.Title = "Create";
}

<div class="col-md-12 col-sm-12">
    <div class="panel panel-info">
        <div class="panel-heading">Student Registration</div>
        <div class="panel-body">
            <div class="row">
                <div class="col-md-offset-1 col-md-10 col-sm-12">
                    @using (Html.BeginForm("Create","StudentInfoes", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            
                            <div class="col-md-6 col-sm-12">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.SemesterId, "Semester", htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-9">
                                        <input data-val="true" id="SemesterId" name="SemesterId" type="hidden" value="@ViewBag.SemesterId">
                                        <input class="form-control" id="SemesterName" name="SemesterName" readonly="true" value="@ViewBag.Semester">
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.ExamId, "Exam", htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-9">
                                        @Html.DropDownList("ExamId", null, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.ExamId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.ProgramId, "Program", htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-9">
                                        @Html.DropDownList("ProgramId", null, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.ProgramId, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.IdNo, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-9">
                                        @Html.EditorFor(model => model.IdNo, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.IdNo, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-9">
                                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.ContactNo, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-9">
                                        @Html.EditorFor(model => model.ContactNo, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.ContactNo, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-9">
                                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6 col-sm-12">
                                <div class="form-group">
                                    <label class="control-label">Student Image</label><br />
                                    <img id="imageView1" class="img-thumbnail" src="~/Reports/image-icon.png" alt="Student Image" height="100px" width="90px" />
                                    @Html.TextBoxFor(model => model.StudentImageFile, new { @type = "file", onchange = "readURL1(this);" })
                                    @Html.ValidationMessageFor(model => model.StudentImageFile, "", new { @class = "text-danger" })

                                </div>

                                <div class="form-group">
                                    <label class="control-label">Payment Image</label><br />
                                    <img id="imageView2" class="img-thumbnail" src="~/Reports/image-icon.png" alt="Payment Image" height="100px" width="90px" />
                                    @Html.TextBoxFor(model => model.StudentPaymentFile, new { @type = "file", onchange = "readURL2(this);" })
                                    @Html.ValidationMessageFor(model => model.StudentPaymentFile, "", new { @class = "text-danger" })


                                </div>
                                
                                <div class="form-group">
                                    <input type="submit" value="Submit" class="btn btn-primary" />
                                    <label class="control-label @ViewBag.MessageColor">@ViewBag.Message</label>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    
    <script type="text/javascript">
        function readURL1(input) {
            var a = (input.files[0].size);
            var b = a / 1000;
            if (a > 200000) {
                $("#StudentImageFile").val("");
                alert('Your file size'+b+'KB. Your file size must be less then 200KB');
            } else {
                if (input.files && input.files[0]) {
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        $('#imageView1')
                            .attr('src', e.target.result);
                    };

                    reader.readAsDataURL(input.files[0]);
                }
            }
        }

        function readURL2(input) {
            var a = (input.files[0].size);
            var b = a / 1000;
            if (a > 200000) {
                $("#StudentPaymentFile").val("");
                alert('Your file size' + b + 'KB. Your file size must be less then 200KB');
            } else {
                if (input.files && input.files[0]) {
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        $('#imageView2')
                            .attr('src', e.target.result);
                    };

                    reader.readAsDataURL(input.files[0]);
                }
            }
        }

    </script>
}
